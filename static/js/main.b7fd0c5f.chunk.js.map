{"version":3,"sources":["components/home/home.component.js","components/options/options.component.js","components/results/results.component.js","components/snapshot/camera.js","components/snapshot/snapshot.component.js","components/upload/computervision.js","components/upload/upload.component.js","components/enterURL/computervision.js","components/enterURL/enterURL.component.js","App.js","reportWebVitals.js","index.js"],"names":["home","props","state","this","setState","id","class","data-bs-ride","src","alt","href","Component","options","results","camera","width","height","createObjects","video","document","createElement","autoplay","body","appendChild","canvas","context","startCamera","w","h","navigator","mediaDevices","getUserMedia","getElementById","getContext","then","stream","srcObject","play","console","log","takeSnapshot","drawImage","snapshot","formAction","key","process","endpoint","visualFeatures","includesText","tags","a","filter","el","name","toLowerCase","includesHandwriting","wait","timeout","Promise","resolve","setTimeout","computerVision","url","computerVisionClient","ComputerVisionClient","ApiKeyCredentials","inHeader","urlToAnalyze","analyzeImage","analysis","readTextFromURL","text","client","read","result","operationID","operationLocation","split","slice","start","Date","now","status","getReadResult","analyzeResult","upload","fs","require","uploadFunc","file","readFile","path","err","data","s3bucket","AWS","S3","params","Bucket","createBucket","Key","originalFilename","Body","unlink","error","processUpload","e","fileSelected","onFileUrlEntered","processing","item","PrettyPrintJson","JSON","stringify","DisplayResults","URL","border","description","captions","Analyze","CantAnalyze","Render","length","ComputerVisionIsConfigured","handleChange","event","target","files","uploads","hasOwnProperty","dynamicImageURL","createObjectURL","push","patterns","documents","className","type","onChange","map","value","index","onClick","EnterURL","useState","setFileSelected","setAnalysis","setProcessing","parsed","placeholder","size","App","component","enterURL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7fd0c5f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nconst home = class home extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={};\n    };\n\n    componentDidMount(){\n        this.setState({})\n    }\n\n    render(){\n        return (\n            <div>\n                <div id=\"carouselExampleSlidesOnly\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n                    <div class=\"carousel-inner\">\n                        <div class=\"carousel-item active\">\n                            <img src=\"https://picsum.photos/1000/250\" class=\"d-block w-100\" alt=\"...\"/>\n                        </div>\n                        <div class=\"carousel-item\">\n                            <img src=\"https://picsum.photos/1000/250\" class=\"d-block w-100\" alt=\"...\"/>\n                        </div>\n                        <div class=\"carousel-item\">\n                            <img src=\"https://picsum.photos/1000/250\" class=\"d-block w-100\" alt=\"...\"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card text-center\" >\n                    <div class=\"card-body\">\n                        <h3 class=\"card-title\"><b>AI Check Reader</b></h3>\n                        <h4 class=\"card-text\">Submit your check for validation</h4>\n                        <br/>\n                        <a href=\"/get-started\" class=\"btn btn-primary btn-lg\">Begin New Transaction</a>\n                    </div>\n                </div>\n            </div>\n\n            \n        )\n    }\n}\n\nexport default home;","import React, {Component} from 'react';\n\nconst options = class options extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={};\n    };\n\n    componentDidMount(){\n        this.setState({})\n    }\n\n    render(){\n        return (\n            <div>\n                <br></br><br></br>\n                <a href=\"/upload\" class=\"btn btn-outline-primary\">Upload file</a>\n                <a href=\"/enterURL\" class=\"btn btn-outline-success\">Enter Image URL</a>\n                <a href=\"/snapshot\" class=\"btn btn-outline-info\">Take Snapshot</a>\n                <br></br>\n            </div>\n        )\n    }\n}\n\nexport default options;","import React, {Component} from 'react';\n\nconst results = class results extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={};\n    };\n\n    componentDidMount(){\n        this.setState({})\n    }\n\n    render(){\n        return (\n            <div>\n                <br></br><br></br>\n                <div class=\"card\" >\n                    <p class=\"card-header\">Here's your validated check details</p>\n                    <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item\">Name: Rahmana Muhammed</li>\n                        <li class=\"list-group-item\">Amount: $ 1 000 000 </li>\n                        <li class=\"list-group-item\">Date: March 9, 2021</li>\n                    </ul>\n                </div>\n                <br></br>\n                <a href=\"/\" class=\"btn btn-warning\">Start Over</a>\n            </div>\n        )\n    }\n}\n\nexport default results;","import 'bootstrap/dist/css/bootstrap.min.css'\n\nconst camera = function () {\n    let width = 0;\n    let height = 0;\n    \n    const createObjects = function () {\n    \n    \n        const video = document.createElement('video');\n        video.id = 'video';\n        video.width = width;\n        video.width = height;\n        video.autoplay = true;\n        document.body.appendChild(video);\n    \n        const canvas = document.createElement('canvas');\n        canvas.id = 'canvas';\n        canvas.width = width;\n        canvas.width = height;\n        document.body.appendChild(canvas);\n    }\n    \n    \n    return {\n        video: null,\n        context: null,\n        canvas: null,\n    \n        startCamera: function (w = 680, h = 480) {\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                width = w;\n                height = h;\n    \n                createObjects();\n    \n                this.video = document.getElementById('video');\n                this.canvas = document.getElementById('canvas');\n                this.context = this.canvas.getContext('2d');\n    \n    \n                (function (video) {\n                    navigator.mediaDevices.getUserMedia({video: true}).then(function (stream) {\n                        video.srcObject = stream;\n                        video.play();\n                    });\n                })(this.video)   \n                console.log(\"Started camera\");\n            }\n        },\n    \n        takeSnapshot: function () {\n            this.context.drawImage(this.video, 0, 0, width, height);\n        }\n    }\n    }();\n    \n    export default camera;","import React, {Component} from 'react';\nimport \"./snapshot.css\"\nimport camera from './camera.js';\n\nconst snapshot = class snapshot extends Component{\n    constructor(props){\n        super(props);\n\n        this.state={};\n    };\n\n    componentDidMount(){\n        this.setState({})\n    }\n\n    render(){\n        camera.startCamera();\n        \n        return (\n            <div id=\"canvasContainer\">\n                <br></br><br></br>\n                <br></br>\n                <a href=\"/results\" class=\"btn btn-success\">Submit</a>\n                <button class=\"btn btn-secondary\" formAction=\"camera.takeSnapshot()\">Capture</button>\n                \n            </div>\n        )\n    }\n}\n\nexport default snapshot;","// ./src/azure-cognitiveservices-computervision.js\n\n// Azure SDK client libraries\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\n// List of sample images to use in demo\n// import RandomImageUrl from './DefaultImages';\n\n// Authentication requirements\nconst key = process.env.REACT_APP_COMPUTERVISIONKEY;\nconst endpoint = process.env.REACT_APP_COMPUTERVISIONENDPOINT;\n\nconsole.log(`key = ${key}`)\nconsole.log(`endpoint = ${endpoint}`)\n\n// Cognitive service features\nconst visualFeatures = [\n    \"ImageType\",\n    \"Faces\",\n    \"Adult\",\n    \"Categories\",\n    \"Color\",\n    \"Tags\",\n    \"Description\",\n    \"Objects\",\n    \"Brands\"\n];\n\nexport const isConfigured = () => {\n    const result = (key && endpoint && (key.length > 0) && (endpoint.length > 0)) ? true : false;\n    console.log(`key = ${key}`)\n    console.log(`endpoint = ${endpoint}`)\n    console.log(`ComputerVision isConfigured = ${result}`)\n    return result;\n}\n\n// Computer Vision detected Printed Text\nconst includesText = async (tags) => {\n    return tags.filter((el) => {\n        return el.name.toLowerCase() === \"text\";\n    });\n}\n// Computer Vision detected Handwriting\nconst includesHandwriting = async (tags) => {\n    return tags.filter((el) => {\n        return el.name.toLowerCase() === \"handwriting\";\n    });\n}\n// Wait for text detection to succeed\nconst wait = (timeout) => {\n    return new Promise(resolve => {\n        setTimeout(resolve, timeout);\n    });\n}\n\n// Analyze Image from URL\nexport const computerVision = async (url) => {\n\n    // authenticate to Azure service\n    const computerVisionClient = new ComputerVisionClient(\n        new ApiKeyCredentials({ inHeader: { 'Ocp-Apim-Subscription-Key': key } }), endpoint);\n\n    // get image URL - entered in form or random from Default Images\n    const urlToAnalyze = url //|| RandomImageUrl();\n    \n    // analyze image\n    const analysis = await computerVisionClient.analyzeImage(urlToAnalyze, { visualFeatures });\n\n    // text detected - what does it say and where is it\n    if (includesText(analysis.tags) || includesHandwriting(analysis.tags)) {\n        analysis.text = await readTextFromURL(computerVisionClient, urlToAnalyze);\n    }\n\n    // all information about image\n    return { \"URL\": urlToAnalyze, ...analysis};\n}\n// analyze text in image\nconst readTextFromURL = async (client, url) => {\n    \n    let result = await client.read(url);\n    let operationID = result.operationLocation.split('/').slice(-1)[0];\n\n    // Wait for read recognition to complete\n    // result.status is initially undefined, since it's the result of read\n    const start = Date.now();\n    console.log(`${start} -${result?.status} `);\n    \n    while (result.status !== \"succeeded\") {\n        await wait(500);\n        console.log(`${Date.now() - start} -${result?.status} `);\n        result = await client.getReadResult(operationID);\n    }\n    \n    // Return the first page of result. \n    // Replace[0] with the desired page if this is a multi-page file such as .pdf or.tiff.\n    return result.analyzeResult; \n}","import { computerVision, isConfigured as ComputerVisionIsConfigured } from './computervision';\nimport React, {Component} from 'react';\nimport AWS from 'aws-sdk';\nimport fs from 'fs';\n\n\nvar upload = class upload extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            uploads: [],\n            patterns: [],\n            documents: [],\n            fileSelected: null,\n            analysis: null,\n            processing: false\n          };\n    };\n\n    componentDidMount(){\n        this.setState({})\n    }\n\n    fs = require('fs');\n    uploadFunc = function (file) {\n    fs.readFile(file.path, function (err, data) {\n        if (err) throw err; // Something went wrong!\n        var s3bucket = new AWS.S3({params: {Bucket: 'checkreaderbucket'}});\n        s3bucket.createBucket(function () {\n            var params = {\n                Key: file.originalFilename,\n                Body: data\n            };\n            s3bucket.upload(params, function (err, data) {\n                // Whether there is an error or not, delete the temp file\n                fs.unlink(file.path, function (err) {\n                    if (err) {\n                        console.error(err);\n                    }\n                    console.log('Temp File Delete');\n                });\n\n                console.log(\"PRINT FILE:\", file);\n                if (err) {\n                    console.log('ERROR MSG: ', err);\n                } else {\n                    console.log('Successfully uploaded data');\n\n                }\n            });\n            });\n        });\n    };\n\n\n\n   processUpload = (e) => {\n    this.setState({\n        fileSelected: e\n      })\n  }\n\n  onFileUrlEntered = (e) => {\n\n    // hold UI\n    this.setState({\n        processing: true,\n        analysis: null\n      })\n\n    computerVision(this.state.fileSelected || null).then((item) => {\n      // reset state/form\n      this.setState({\n        analysis: item,\n        fileSelected: \"\",\n        processing: false\n      })\n    });\n\n  };\n\n    // Display JSON data in readable format\n    PrettyPrintJson = (data) => {\n      return (<div><pre>{JSON.stringify(data, null, 2)}</pre></div>);\n    }\n  \n    DisplayResults = () => {\n      return (\n        <div>\n          <h2>Computer Vision Analysis</h2>\n          <div><img src={this.state.analysis.URL} height=\"200\" border=\"1\" alt={(this.state.analysis.description && this.state.analysis.description.captions && this.state.analysis.description.captions[0].text ? this.state.analysis.description.captions[0].text : \"can't find caption\")} /></div>\n          {this.PrettyPrintJson(this.state.analysis)}\n        </div>\n      )\n    };\n\n    Analyze = () => {\n      return (\n      <div>\n        {!this.state.processing}\n        {this.state.processing && <div>Processing</div>}\n        <hr />\n        {this.state.analysis && this.DisplayResults()}\n        </div>\n      )\n    }\n    \n     CantAnalyze = () => {\n      return (\n        <div>Key and/or endpoint not configured in ./azure-cognitiveservices-computervision.js</div>\n      )\n    }\n    Render = () => {\n      var ready = ComputerVisionIsConfigured();\n      if (ready) {\n        return <this.Analyze />;\n      }\n      return <this.CantAnalyze />;\n    }\n\n    handleChange = (event) => {\n        if (event.target.files[0]) {\n          var uploads = []\n          for (var key in event.target.files) {\n            if (!event.target.files.hasOwnProperty(key)) continue;\n            let upload = event.target.files[key]\n            //this.uploadFunc(upload);\n            let dynamicImageURL = URL.createObjectURL(upload);\n\n            this.processUpload(dynamicImageURL.slice(5,));\n            uploads.push(dynamicImageURL);\n          }\n          this.setState({\n            uploads: uploads\n          })\n        } else {\n          this.setState({\n            uploads: []\n          })\n        }\n      }\n\n    render(){\n        return (\n            <div>\n                <br></br><br></br>\n                <div>\n                {this.Render()}\n                </div>\n            \n            <br></br><br></br>\n            { /* File uploader */ }\n            <section className=\"hero\">\n                <label className=\"fileUploaderContainer\">\n                    Click here to upload documents\n                    <input type=\"file\" id=\"fileUploader\" onChange={this.handleChange} />\n                </label>\n\n                <div>\n                    { this.state.uploads.map((value, index) => {\n                        return <img key={index} src={value} width=\"400px\" alt=\"upload\"/>\n                    })}\n                </div>\n                <br></br><br></br>\n                <button onClick={this.onFileUrlEntered} class=\"btn btn-success\">Generate</button>\n\n            </section>\n            </div>\n            \n        )\n    }\n}\n\nexport default upload;\n\n","// ./src/azure-cognitiveservices-computervision.js\n\n// Azure SDK client libraries\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\n// List of sample images to use in demo\n// import RandomImageUrl from './DefaultImages';\n\n// Authentication requirements\nconst key = process.env.REACT_APP_COMPUTERVISIONKEY;\nconst endpoint = process.env.REACT_APP_COMPUTERVISIONENDPOINT;\n\nconsole.log(`key = ${key}`)\nconsole.log(`endpoint = ${endpoint}`)\n\n// Cognitive service features\nconst visualFeatures = [\n    \"ImageType\",\n    \"Faces\",\n    \"Adult\",\n    \"Categories\",\n    \"Color\",\n    \"Tags\",\n    \"Description\",\n    \"Objects\",\n    \"Brands\"\n];\n\nexport const isConfigured = () => {\n    const result = (key && endpoint && (key.length > 0) && (endpoint.length > 0)) ? true : false;\n    console.log(`key = ${key}`)\n    console.log(`endpoint = ${endpoint}`)\n    console.log(`ComputerVision isConfigured = ${result}`)\n    return result;\n}\n\n// Computer Vision detected Printed Text\nconst includesText = async (tags) => {\n    return tags.filter((el) => {\n        return el.name.toLowerCase() === \"text\";\n    });\n}\n// Computer Vision detected Handwriting\nconst includesHandwriting = async (tags) => {\n    return tags.filter((el) => {\n        return el.name.toLowerCase() === \"handwriting\";\n    });\n}\n// Wait for text detection to succeed\nconst wait = (timeout) => {\n    return new Promise(resolve => {\n        setTimeout(resolve, timeout);\n    });\n}\n\n// Analyze Image from URL\nexport const computerVision = async (url) => {\n\n    // authenticate to Azure service\n    const computerVisionClient = new ComputerVisionClient(\n        new ApiKeyCredentials({ inHeader: { 'Ocp-Apim-Subscription-Key': key } }), endpoint);\n\n    // get image URL - entered in form or random from Default Images\n    const urlToAnalyze = url //|| RandomImageUrl();\n    \n    // analyze image\n    const analysis = await computerVisionClient.analyzeImage(urlToAnalyze, { visualFeatures });\n\n    // text detected - what does it say and where is it\n    if (includesText(analysis.tags) || includesHandwriting(analysis.tags)) {\n        analysis.text = await readTextFromURL(computerVisionClient, urlToAnalyze);\n    }\n\n    // all information about image\n    return { \"URL\": urlToAnalyze, ...analysis};\n}\n// analyze text in image\nconst readTextFromURL = async (client, url) => {\n    \n    let result = await client.read(url);\n    let operationID = result.operationLocation.split('/').slice(-1)[0];\n\n    // Wait for read recognition to complete\n    // result.status is initially undefined, since it's the result of read\n    const start = Date.now();\n    console.log(`${start} -${result?.status} `);\n    \n    while (result.status !== \"succeeded\") {\n        await wait(500);\n        console.log(`${Date.now() - start} -${result?.status} `);\n        result = await client.getReadResult(operationID);\n    }\n    \n    // Return the first page of result. \n    // Replace[0] with the desired page if this is a multi-page file such as .pdf or.tiff.\n    return result.analyzeResult; \n}","import React, { useState } from 'react';\nimport { computerVision, isConfigured as ComputerVisionIsConfigured } from './computervision';\n\nfunction EnterURL() {\n  const [fileSelected, setFileSelected] = useState(null);\n  const [analysis, setAnalysis] = useState(null);\n  const [processing, setProcessing] = useState(false);\n\n  const handleChange = (e) => {\n    setFileSelected(e.target.value)\n  }\n\n  const onFileUrlEntered = (e) => {\n\n    // hold UI\n    setProcessing(true);\n    setAnalysis(null);\n\n    computerVision(fileSelected || null).then((item) => {\n      // reset state/form\n      setAnalysis(item);\n      setFileSelected(\"\");\n      setProcessing(false);\n    });\n\n  };\n\n    // Display JSON data in readable format\n    const PrettyPrintJson = (data) => {\n        let parsed = [];\n        for  (var item in data.text[\"readResults\"][0][\"lines\"]){\n            parsed.push(data[\"text\"][\"readResults\"][0][\"lines\"][item].text)\n        }\n\n      return (<div><pre>{parsed.map((value) =>{\n          return value + \"\\n\"\n      })}</pre></div>);\n    }\n  \n    const DisplayResults = () => {\n      return (\n        <div>\n          <h3>Check Scan Results</h3>\n          <div><img src={analysis.URL} height=\"200\" border=\"1\" alt={(analysis.description && analysis.description.captions && analysis.description.captions[0].text ? analysis.description.captions[0].text : \"can't find caption\")} /></div>\n          {PrettyPrintJson(analysis)}\n        </div>\n      )\n    };\n\n    const Analyze = () => {\n      return (\n      <div>\n        <p>Analyze image from URL</p>\n        {!processing &&\n          <div>\n            <div>\n              <label>URL</label>\n              <input type=\"text\" placeholder=\"Enter URL or leave empty for random image from collection\" size=\"50\" onChange={handleChange}></input>\n            </div>\n            <button class=\"btn btn-outline-success\" onClick={onFileUrlEntered}>Analyze</button>\n          </div>\n        }\n        {processing && <div>Processing</div>}\n        <hr />\n        {analysis && DisplayResults()}\n        </div>\n      )\n    }\n    \n    const CantAnalyze = () => {\n      return (\n        <div>Key and/or endpoint not configured in ./azure-cognitiveservices-computervision.js</div>\n      )\n    }\n    function Render() {\n      const ready = ComputerVisionIsConfigured();\n      if (ready) {\n        return <Analyze />;\n      }\n      return <CantAnalyze />;\n    }\n  return (\n    <div className=\"App\">\n      <div>\n        {Render()}\n      </div>\n    </div>\n  );\n}\n\nexport default EnterURL;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n\nimport home from \"./components/home/home.component\";\nimport options from \"./components/options/options.component\";\nimport results from \"./components/results/results.component\";\nimport snapshot from \"./components/snapshot/snapshot.component\";\nimport upload from \"./components/upload/upload.component\";\nimport enterURL from \"./components/enterURL/enterURL.component\";\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" component={home} />\n        <Route path=\"/get-started\" component={options}/>\n        <Route path=\"/snapshot\" component={snapshot}/>\n        <Route path=\"/upload\" component={upload}/>\n        <Route path=\"/results\" component={results}/>\n        <Route path=\"/enterURL\" component={enterURL}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}